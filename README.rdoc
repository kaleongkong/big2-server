== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.

Step:

1. Start sql with: mysql.server start
2. Run my sql (optional): mysql -u root -p, pw: (none)
3. set mysql2 gem to mysql2 0.4.10



Note for setting up websocket:
  https://engineering.musefind.com/make-your-rails-app-real-time-in-under-ten-minutes-cd5bd4a47f61
  https://stackoverflow.com/questions/34913887/rails-5-actioncable-undefined-method-fetch-for-nilnilclass/34934916
  gem 'puma'
  Running via Spring preloader in process 8054
        create  app/channels/notes_channel.rb
        create  app/assets/javascripts/cable.js
        create  app/assets/javascripts/channels/notes.js
        create  app/channels/application_cable/channel.rb
        create  app/channels/application_cable/connection.rb

Communicating b/w different devices:
  Server side:
  0. install localtunnel in ruby/npm?????? (not sure if it's a factor)
  1. In application.rb: config.web_console.whitelisted_ips = '192.168.86.114' # IP of the client
  2. In development.rb: Rails.application.config.action_cable.allowed_request_origins = ['http://192.168.86.134:3000', 'http://localhost:3000'] # ip of servers
  3. starting rails with: rails s -b 0.0.0.0 -p 5000
  Client side:
  1. const cable = ActionCable.createConsumer('ws://192.168.86.134:5000/cable'); # use ip instead of localhost.
  2. proxy is using localhost # could also set to ip?

Production Server Side:
  1. make sure to apply gem 'puma' to production as well
  2. update the production.rb to include the following two lines
    # config.web_socket_server_url = "wss://funbig2apis.herokuapp.com/cable" 
    # config.action_cable.allowed_request_origins = ['https://funbig2.herokuapp.com', 'http://funbig2.herokuapp.com']

Production Client Side:
  1. add app.json to include:
      {
        "buildpacks": [
          {
            "url": "https://github.com/mars/create-react-app-buildpack"
          }
        ]
      }
  2. use api-config.js to set up hostname
  3. add static.json (?? api part may not be neccessary)
      {
        "root": "build/",
        "proxies": {
          "/api/": {
            "origin": "https://funbig2.herokuapp.com"
          }
        }
      }
Refereces:
Real-Time Rails: Implementing WebSockets in Rails 5 with Action Cable:
- https://blog.heroku.com/real_time_rails_implementing_websockets_in_rails_5_with_action_cable


Access heroku log
heroku logs --tail -a funbig2apis



